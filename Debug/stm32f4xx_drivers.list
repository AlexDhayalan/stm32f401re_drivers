
stm32f4xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000498  08000194  08000194  00010194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  0800062c  08000634  00010634  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  0800062c  0800062c  00010634  2**0
                  CONTENTS
  4 .ARM          00000000  0800062c  0800062c  00010634  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800062c  08000634  00010634  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800062c  0800062c  0001062c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000630  08000630  00010630  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010634  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000634  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000634  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00010634  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000083c  00000000  00000000  00010664  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000212  00000000  00000000  00010ea0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000b8  00000000  00000000  000110b8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000090  00000000  00000000  00011170  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000012da  00000000  00000000  00011200  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000b6f  00000000  00000000  000124da  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00004dd7  00000000  00000000  00013049  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  00017e20  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000224  00000000  00000000  00017e74  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000000 	.word	0x20000000
 80001b0:	00000000 	.word	0x00000000
 80001b4:	08000614 	.word	0x08000614

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	; (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	; (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	; (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000004 	.word	0x20000004
 80001d0:	08000614 	.word	0x08000614

080001d4 <delay>:
 */


#include "stm32f401RE.h"

void delay(void){
 80001d4:	b480      	push	{r7}
 80001d6:	b083      	sub	sp, #12
 80001d8:	af00      	add	r7, sp, #0
	for(uint32_t i = 0; i < 500000; i++);
 80001da:	2300      	movs	r3, #0
 80001dc:	607b      	str	r3, [r7, #4]
 80001de:	e002      	b.n	80001e6 <delay+0x12>
 80001e0:	687b      	ldr	r3, [r7, #4]
 80001e2:	3301      	adds	r3, #1
 80001e4:	607b      	str	r3, [r7, #4]
 80001e6:	687b      	ldr	r3, [r7, #4]
 80001e8:	4a04      	ldr	r2, [pc, #16]	; (80001fc <delay+0x28>)
 80001ea:	4293      	cmp	r3, r2
 80001ec:	d9f8      	bls.n	80001e0 <delay+0xc>
}
 80001ee:	bf00      	nop
 80001f0:	bf00      	nop
 80001f2:	370c      	adds	r7, #12
 80001f4:	46bd      	mov	sp, r7
 80001f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80001fa:	4770      	bx	lr
 80001fc:	0007a11f 	.word	0x0007a11f

08000200 <main>:



int main(void){
 8000200:	b580      	push	{r7, lr}
 8000202:	b086      	sub	sp, #24
 8000204:	af00      	add	r7, sp, #0
	GPIO_Handle_t gpioLed, gpioBtn;

	gpioLed.pGPIOx = GPIOA;
 8000206:	4b1a      	ldr	r3, [pc, #104]	; (8000270 <main+0x70>)
 8000208:	60fb      	str	r3, [r7, #12]
	gpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_5;
 800020a:	2305      	movs	r3, #5
 800020c:	743b      	strb	r3, [r7, #16]
	gpioLed.GPIO_PinConfig.GPIO_PinMode  =  GPIO_MODE_OUT;
 800020e:	2301      	movs	r3, #1
 8000210:	747b      	strb	r3, [r7, #17]
	gpioLed.GPIO_PinConfig.GPIO_PinSpeed  = GPIO_OP_SPEED_HIGH;
 8000212:	2302      	movs	r3, #2
 8000214:	74bb      	strb	r3, [r7, #18]
	gpioLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 8000216:	2300      	movs	r3, #0
 8000218:	753b      	strb	r3, [r7, #20]
	gpioLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NOPUPD;
 800021a:	2300      	movs	r3, #0
 800021c:	74fb      	strb	r3, [r7, #19]

    GPIO_PeriClockControl(GPIOA, ENABLE);
 800021e:	2101      	movs	r1, #1
 8000220:	4813      	ldr	r0, [pc, #76]	; (8000270 <main+0x70>)
 8000222:	f000 f853 	bl	80002cc <GPIO_PeriClockControl>
	GPIO_Init(&gpioLed);
 8000226:	f107 030c 	add.w	r3, r7, #12
 800022a:	4618      	mov	r0, r3
 800022c:	f000 f8ee 	bl	800040c <GPIO_Init>

	gpioBtn.pGPIOx = GPIOC;
 8000230:	4b10      	ldr	r3, [pc, #64]	; (8000274 <main+0x74>)
 8000232:	603b      	str	r3, [r7, #0]
	gpioBtn.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_13;
 8000234:	230d      	movs	r3, #13
 8000236:	713b      	strb	r3, [r7, #4]
	gpioBtn.GPIO_PinConfig.GPIO_PinMode  =  GPIO_MODE_IN;
 8000238:	2300      	movs	r3, #0
 800023a:	717b      	strb	r3, [r7, #5]
	gpioBtn.GPIO_PinConfig.GPIO_PinSpeed  = GPIO_OP_SPEED_HIGH;
 800023c:	2302      	movs	r3, #2
 800023e:	71bb      	strb	r3, [r7, #6]
	gpioBtn.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NOPUPD;
 8000240:	2300      	movs	r3, #0
 8000242:	71fb      	strb	r3, [r7, #7]

	GPIO_PeriClockControl(GPIOC, ENABLE);
 8000244:	2101      	movs	r1, #1
 8000246:	480b      	ldr	r0, [pc, #44]	; (8000274 <main+0x74>)
 8000248:	f000 f840 	bl	80002cc <GPIO_PeriClockControl>
	GPIO_Init(&gpioBtn);
 800024c:	463b      	mov	r3, r7
 800024e:	4618      	mov	r0, r3
 8000250:	f000 f8dc 	bl	800040c <GPIO_Init>

	while(1){
		if(GPIO_ReadFromInputPin(GPIOC, GPIO_PIN_NO_13) == DISABLE){
 8000254:	210d      	movs	r1, #13
 8000256:	4807      	ldr	r0, [pc, #28]	; (8000274 <main+0x74>)
 8000258:	f000 f98d 	bl	8000576 <GPIO_ReadFromInputPin>
 800025c:	4603      	mov	r3, r0
 800025e:	2b00      	cmp	r3, #0
 8000260:	d1f8      	bne.n	8000254 <main+0x54>
			delay();
 8000262:	f7ff ffb7 	bl	80001d4 <delay>
			GPIO_TogglePin(GPIOA, GPIO_PIN_NO_5);
 8000266:	2105      	movs	r1, #5
 8000268:	4801      	ldr	r0, [pc, #4]	; (8000270 <main+0x70>)
 800026a:	f000 f99a 	bl	80005a2 <GPIO_TogglePin>
		if(GPIO_ReadFromInputPin(GPIOC, GPIO_PIN_NO_13) == DISABLE){
 800026e:	e7f1      	b.n	8000254 <main+0x54>
 8000270:	40020000 	.word	0x40020000
 8000274:	40020800 	.word	0x40020800

08000278 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000278:	480d      	ldr	r0, [pc, #52]	; (80002b0 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800027a:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 800027c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000280:	480c      	ldr	r0, [pc, #48]	; (80002b4 <LoopForever+0x6>)
  ldr r1, =_edata
 8000282:	490d      	ldr	r1, [pc, #52]	; (80002b8 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000284:	4a0d      	ldr	r2, [pc, #52]	; (80002bc <LoopForever+0xe>)
  movs r3, #0
 8000286:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000288:	e002      	b.n	8000290 <LoopCopyDataInit>

0800028a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800028a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800028c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800028e:	3304      	adds	r3, #4

08000290 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000290:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000292:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000294:	d3f9      	bcc.n	800028a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000296:	4a0a      	ldr	r2, [pc, #40]	; (80002c0 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000298:	4c0a      	ldr	r4, [pc, #40]	; (80002c4 <LoopForever+0x16>)
  movs r3, #0
 800029a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800029c:	e001      	b.n	80002a2 <LoopFillZerobss>

0800029e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800029e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002a0:	3204      	adds	r2, #4

080002a2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002a2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002a4:	d3fb      	bcc.n	800029e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80002a6:	f000 f991 	bl	80005cc <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002aa:	f7ff ffa9 	bl	8000200 <main>

080002ae <LoopForever>:

LoopForever:
    b LoopForever
 80002ae:	e7fe      	b.n	80002ae <LoopForever>
  ldr   r0, =_estack
 80002b0:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 80002b4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002b8:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002bc:	08000634 	.word	0x08000634
  ldr r2, =_sbss
 80002c0:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002c4:	2000001c 	.word	0x2000001c

080002c8 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002c8:	e7fe      	b.n	80002c8 <ADC_IRQHandler>
	...

080002cc <GPIO_PeriClockControl>:
 *
 * 	@return				-
 *
 * 	@note				-
 */
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi){
 80002cc:	b480      	push	{r7}
 80002ce:	b083      	sub	sp, #12
 80002d0:	af00      	add	r7, sp, #0
 80002d2:	6078      	str	r0, [r7, #4]
 80002d4:	460b      	mov	r3, r1
 80002d6:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE){
 80002d8:	78fb      	ldrb	r3, [r7, #3]
 80002da:	2b01      	cmp	r3, #1
 80002dc:	d141      	bne.n	8000362 <GPIO_PeriClockControl+0x96>
		if(pGPIOx == GPIOA){
 80002de:	687b      	ldr	r3, [r7, #4]
 80002e0:	4a43      	ldr	r2, [pc, #268]	; (80003f0 <GPIO_PeriClockControl+0x124>)
 80002e2:	4293      	cmp	r3, r2
 80002e4:	d106      	bne.n	80002f4 <GPIO_PeriClockControl+0x28>
			GPIOA_PCLK_EN();
 80002e6:	4b43      	ldr	r3, [pc, #268]	; (80003f4 <GPIO_PeriClockControl+0x128>)
 80002e8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002ea:	4a42      	ldr	r2, [pc, #264]	; (80003f4 <GPIO_PeriClockControl+0x128>)
 80002ec:	f043 0301 	orr.w	r3, r3, #1
 80002f0:	6313      	str	r3, [r2, #48]	; 0x30
			}
		else if(pGPIOx == GPIOH){
			GPIOH_PCLK_DI();
			}
	}
}
 80002f2:	e077      	b.n	80003e4 <GPIO_PeriClockControl+0x118>
		else if(pGPIOx == GPIOB){
 80002f4:	687b      	ldr	r3, [r7, #4]
 80002f6:	4a40      	ldr	r2, [pc, #256]	; (80003f8 <GPIO_PeriClockControl+0x12c>)
 80002f8:	4293      	cmp	r3, r2
 80002fa:	d106      	bne.n	800030a <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 80002fc:	4b3d      	ldr	r3, [pc, #244]	; (80003f4 <GPIO_PeriClockControl+0x128>)
 80002fe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000300:	4a3c      	ldr	r2, [pc, #240]	; (80003f4 <GPIO_PeriClockControl+0x128>)
 8000302:	f043 0302 	orr.w	r3, r3, #2
 8000306:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000308:	e06c      	b.n	80003e4 <GPIO_PeriClockControl+0x118>
		else if(pGPIOx == GPIOC){
 800030a:	687b      	ldr	r3, [r7, #4]
 800030c:	4a3b      	ldr	r2, [pc, #236]	; (80003fc <GPIO_PeriClockControl+0x130>)
 800030e:	4293      	cmp	r3, r2
 8000310:	d106      	bne.n	8000320 <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 8000312:	4b38      	ldr	r3, [pc, #224]	; (80003f4 <GPIO_PeriClockControl+0x128>)
 8000314:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000316:	4a37      	ldr	r2, [pc, #220]	; (80003f4 <GPIO_PeriClockControl+0x128>)
 8000318:	f043 0304 	orr.w	r3, r3, #4
 800031c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800031e:	e061      	b.n	80003e4 <GPIO_PeriClockControl+0x118>
		else if(pGPIOx == GPIOD){
 8000320:	687b      	ldr	r3, [r7, #4]
 8000322:	4a37      	ldr	r2, [pc, #220]	; (8000400 <GPIO_PeriClockControl+0x134>)
 8000324:	4293      	cmp	r3, r2
 8000326:	d106      	bne.n	8000336 <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 8000328:	4b32      	ldr	r3, [pc, #200]	; (80003f4 <GPIO_PeriClockControl+0x128>)
 800032a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800032c:	4a31      	ldr	r2, [pc, #196]	; (80003f4 <GPIO_PeriClockControl+0x128>)
 800032e:	f043 0308 	orr.w	r3, r3, #8
 8000332:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000334:	e056      	b.n	80003e4 <GPIO_PeriClockControl+0x118>
		else if(pGPIOx == GPIOE){
 8000336:	687b      	ldr	r3, [r7, #4]
 8000338:	4a32      	ldr	r2, [pc, #200]	; (8000404 <GPIO_PeriClockControl+0x138>)
 800033a:	4293      	cmp	r3, r2
 800033c:	d106      	bne.n	800034c <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 800033e:	4b2d      	ldr	r3, [pc, #180]	; (80003f4 <GPIO_PeriClockControl+0x128>)
 8000340:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000342:	4a2c      	ldr	r2, [pc, #176]	; (80003f4 <GPIO_PeriClockControl+0x128>)
 8000344:	f043 0310 	orr.w	r3, r3, #16
 8000348:	6313      	str	r3, [r2, #48]	; 0x30
}
 800034a:	e04b      	b.n	80003e4 <GPIO_PeriClockControl+0x118>
		else if(pGPIOx == GPIOH){
 800034c:	687b      	ldr	r3, [r7, #4]
 800034e:	4a2e      	ldr	r2, [pc, #184]	; (8000408 <GPIO_PeriClockControl+0x13c>)
 8000350:	4293      	cmp	r3, r2
 8000352:	d147      	bne.n	80003e4 <GPIO_PeriClockControl+0x118>
			GPIOH_PCLK_EN();
 8000354:	4b27      	ldr	r3, [pc, #156]	; (80003f4 <GPIO_PeriClockControl+0x128>)
 8000356:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000358:	4a26      	ldr	r2, [pc, #152]	; (80003f4 <GPIO_PeriClockControl+0x128>)
 800035a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800035e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000360:	e040      	b.n	80003e4 <GPIO_PeriClockControl+0x118>
		if(pGPIOx == GPIOA){
 8000362:	687b      	ldr	r3, [r7, #4]
 8000364:	4a22      	ldr	r2, [pc, #136]	; (80003f0 <GPIO_PeriClockControl+0x124>)
 8000366:	4293      	cmp	r3, r2
 8000368:	d106      	bne.n	8000378 <GPIO_PeriClockControl+0xac>
			GPIOA_PCLK_DI();
 800036a:	4b22      	ldr	r3, [pc, #136]	; (80003f4 <GPIO_PeriClockControl+0x128>)
 800036c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800036e:	4a21      	ldr	r2, [pc, #132]	; (80003f4 <GPIO_PeriClockControl+0x128>)
 8000370:	f023 0301 	bic.w	r3, r3, #1
 8000374:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000376:	e035      	b.n	80003e4 <GPIO_PeriClockControl+0x118>
		else if(pGPIOx == GPIOB){
 8000378:	687b      	ldr	r3, [r7, #4]
 800037a:	4a1f      	ldr	r2, [pc, #124]	; (80003f8 <GPIO_PeriClockControl+0x12c>)
 800037c:	4293      	cmp	r3, r2
 800037e:	d106      	bne.n	800038e <GPIO_PeriClockControl+0xc2>
			GPIOB_PCLK_DI();
 8000380:	4b1c      	ldr	r3, [pc, #112]	; (80003f4 <GPIO_PeriClockControl+0x128>)
 8000382:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000384:	4a1b      	ldr	r2, [pc, #108]	; (80003f4 <GPIO_PeriClockControl+0x128>)
 8000386:	f023 0302 	bic.w	r3, r3, #2
 800038a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800038c:	e02a      	b.n	80003e4 <GPIO_PeriClockControl+0x118>
		else if(pGPIOx == GPIOC){
 800038e:	687b      	ldr	r3, [r7, #4]
 8000390:	4a1a      	ldr	r2, [pc, #104]	; (80003fc <GPIO_PeriClockControl+0x130>)
 8000392:	4293      	cmp	r3, r2
 8000394:	d106      	bne.n	80003a4 <GPIO_PeriClockControl+0xd8>
			GPIOC_PCLK_DI();
 8000396:	4b17      	ldr	r3, [pc, #92]	; (80003f4 <GPIO_PeriClockControl+0x128>)
 8000398:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800039a:	4a16      	ldr	r2, [pc, #88]	; (80003f4 <GPIO_PeriClockControl+0x128>)
 800039c:	f023 0304 	bic.w	r3, r3, #4
 80003a0:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003a2:	e01f      	b.n	80003e4 <GPIO_PeriClockControl+0x118>
		else if(pGPIOx == GPIOD){
 80003a4:	687b      	ldr	r3, [r7, #4]
 80003a6:	4a16      	ldr	r2, [pc, #88]	; (8000400 <GPIO_PeriClockControl+0x134>)
 80003a8:	4293      	cmp	r3, r2
 80003aa:	d106      	bne.n	80003ba <GPIO_PeriClockControl+0xee>
			GPIOD_PCLK_DI();
 80003ac:	4b11      	ldr	r3, [pc, #68]	; (80003f4 <GPIO_PeriClockControl+0x128>)
 80003ae:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003b0:	4a10      	ldr	r2, [pc, #64]	; (80003f4 <GPIO_PeriClockControl+0x128>)
 80003b2:	f023 0308 	bic.w	r3, r3, #8
 80003b6:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003b8:	e014      	b.n	80003e4 <GPIO_PeriClockControl+0x118>
		else if(pGPIOx == GPIOE){
 80003ba:	687b      	ldr	r3, [r7, #4]
 80003bc:	4a11      	ldr	r2, [pc, #68]	; (8000404 <GPIO_PeriClockControl+0x138>)
 80003be:	4293      	cmp	r3, r2
 80003c0:	d106      	bne.n	80003d0 <GPIO_PeriClockControl+0x104>
			GPIOE_PCLK_DI();
 80003c2:	4b0c      	ldr	r3, [pc, #48]	; (80003f4 <GPIO_PeriClockControl+0x128>)
 80003c4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003c6:	4a0b      	ldr	r2, [pc, #44]	; (80003f4 <GPIO_PeriClockControl+0x128>)
 80003c8:	f023 0310 	bic.w	r3, r3, #16
 80003cc:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003ce:	e009      	b.n	80003e4 <GPIO_PeriClockControl+0x118>
		else if(pGPIOx == GPIOH){
 80003d0:	687b      	ldr	r3, [r7, #4]
 80003d2:	4a0d      	ldr	r2, [pc, #52]	; (8000408 <GPIO_PeriClockControl+0x13c>)
 80003d4:	4293      	cmp	r3, r2
 80003d6:	d105      	bne.n	80003e4 <GPIO_PeriClockControl+0x118>
			GPIOH_PCLK_DI();
 80003d8:	4b06      	ldr	r3, [pc, #24]	; (80003f4 <GPIO_PeriClockControl+0x128>)
 80003da:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003dc:	4a05      	ldr	r2, [pc, #20]	; (80003f4 <GPIO_PeriClockControl+0x128>)
 80003de:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80003e2:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003e4:	bf00      	nop
 80003e6:	370c      	adds	r7, #12
 80003e8:	46bd      	mov	sp, r7
 80003ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003ee:	4770      	bx	lr
 80003f0:	40020000 	.word	0x40020000
 80003f4:	40023800 	.word	0x40023800
 80003f8:	40020400 	.word	0x40020400
 80003fc:	40020800 	.word	0x40020800
 8000400:	40020c00 	.word	0x40020c00
 8000404:	40021000 	.word	0x40021000
 8000408:	40021c00 	.word	0x40021c00

0800040c <GPIO_Init>:

/*
 * GPIO Init Deinit setup
 */
void GPIO_Init(GPIO_Handle_t *pGPIOHandle){
 800040c:	b480      	push	{r7}
 800040e:	b085      	sub	sp, #20
 8000410:	af00      	add	r7, sp, #0
 8000412:	6078      	str	r0, [r7, #4]
	uint32_t temp = 0;
 8000414:	2300      	movs	r3, #0
 8000416:	60fb      	str	r3, [r7, #12]

	//1. Mode of the GPIO pin
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG){
 8000418:	687b      	ldr	r3, [r7, #4]
 800041a:	795b      	ldrb	r3, [r3, #5]
 800041c:	2b03      	cmp	r3, #3
 800041e:	d81e      	bhi.n	800045e <GPIO_Init+0x52>
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2* pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000420:	687b      	ldr	r3, [r7, #4]
 8000422:	795b      	ldrb	r3, [r3, #5]
 8000424:	461a      	mov	r2, r3
 8000426:	687b      	ldr	r3, [r7, #4]
 8000428:	791b      	ldrb	r3, [r3, #4]
 800042a:	005b      	lsls	r3, r3, #1
 800042c:	fa02 f303 	lsl.w	r3, r2, r3
 8000430:	60fb      	str	r3, [r7, #12]
		pGPIOHandle->pGPIOx->MODER &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000432:	687b      	ldr	r3, [r7, #4]
 8000434:	681b      	ldr	r3, [r3, #0]
 8000436:	681a      	ldr	r2, [r3, #0]
 8000438:	687b      	ldr	r3, [r7, #4]
 800043a:	791b      	ldrb	r3, [r3, #4]
 800043c:	4619      	mov	r1, r3
 800043e:	2303      	movs	r3, #3
 8000440:	408b      	lsls	r3, r1
 8000442:	43db      	mvns	r3, r3
 8000444:	4619      	mov	r1, r3
 8000446:	687b      	ldr	r3, [r7, #4]
 8000448:	681b      	ldr	r3, [r3, #0]
 800044a:	400a      	ands	r2, r1
 800044c:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp;
 800044e:	687b      	ldr	r3, [r7, #4]
 8000450:	681b      	ldr	r3, [r3, #0]
 8000452:	6819      	ldr	r1, [r3, #0]
 8000454:	687b      	ldr	r3, [r7, #4]
 8000456:	681b      	ldr	r3, [r3, #0]
 8000458:	68fa      	ldr	r2, [r7, #12]
 800045a:	430a      	orrs	r2, r1
 800045c:	601a      	str	r2, [r3, #0]
	}
	else{
		//Interrupt cycle
	}
	temp = 0;
 800045e:	2300      	movs	r3, #0
 8000460:	60fb      	str	r3, [r7, #12]

	//2. Speed configuration
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000462:	687b      	ldr	r3, [r7, #4]
 8000464:	799b      	ldrb	r3, [r3, #6]
 8000466:	461a      	mov	r2, r3
 8000468:	687b      	ldr	r3, [r7, #4]
 800046a:	791b      	ldrb	r3, [r3, #4]
 800046c:	005b      	lsls	r3, r3, #1
 800046e:	fa02 f303 	lsl.w	r3, r2, r3
 8000472:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000474:	687b      	ldr	r3, [r7, #4]
 8000476:	681b      	ldr	r3, [r3, #0]
 8000478:	689a      	ldr	r2, [r3, #8]
 800047a:	687b      	ldr	r3, [r7, #4]
 800047c:	791b      	ldrb	r3, [r3, #4]
 800047e:	4619      	mov	r1, r3
 8000480:	2303      	movs	r3, #3
 8000482:	408b      	lsls	r3, r1
 8000484:	43db      	mvns	r3, r3
 8000486:	4619      	mov	r1, r3
 8000488:	687b      	ldr	r3, [r7, #4]
 800048a:	681b      	ldr	r3, [r3, #0]
 800048c:	400a      	ands	r2, r1
 800048e:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 8000490:	687b      	ldr	r3, [r7, #4]
 8000492:	681b      	ldr	r3, [r3, #0]
 8000494:	6899      	ldr	r1, [r3, #8]
 8000496:	687b      	ldr	r3, [r7, #4]
 8000498:	681b      	ldr	r3, [r3, #0]
 800049a:	68fa      	ldr	r2, [r7, #12]
 800049c:	430a      	orrs	r2, r1
 800049e:	609a      	str	r2, [r3, #8]

	temp = 0;
 80004a0:	2300      	movs	r3, #0
 80004a2:	60fb      	str	r3, [r7, #12]
	//3. PUPD config
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80004a4:	687b      	ldr	r3, [r7, #4]
 80004a6:	79db      	ldrb	r3, [r3, #7]
 80004a8:	461a      	mov	r2, r3
 80004aa:	687b      	ldr	r3, [r7, #4]
 80004ac:	791b      	ldrb	r3, [r3, #4]
 80004ae:	005b      	lsls	r3, r3, #1
 80004b0:	fa02 f303 	lsl.w	r3, r2, r3
 80004b4:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004b6:	687b      	ldr	r3, [r7, #4]
 80004b8:	681b      	ldr	r3, [r3, #0]
 80004ba:	68da      	ldr	r2, [r3, #12]
 80004bc:	687b      	ldr	r3, [r7, #4]
 80004be:	791b      	ldrb	r3, [r3, #4]
 80004c0:	4619      	mov	r1, r3
 80004c2:	2303      	movs	r3, #3
 80004c4:	408b      	lsls	r3, r1
 80004c6:	43db      	mvns	r3, r3
 80004c8:	4619      	mov	r1, r3
 80004ca:	687b      	ldr	r3, [r7, #4]
 80004cc:	681b      	ldr	r3, [r3, #0]
 80004ce:	400a      	ands	r2, r1
 80004d0:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 80004d2:	687b      	ldr	r3, [r7, #4]
 80004d4:	681b      	ldr	r3, [r3, #0]
 80004d6:	68d9      	ldr	r1, [r3, #12]
 80004d8:	687b      	ldr	r3, [r7, #4]
 80004da:	681b      	ldr	r3, [r3, #0]
 80004dc:	68fa      	ldr	r2, [r7, #12]
 80004de:	430a      	orrs	r2, r1
 80004e0:	60da      	str	r2, [r3, #12]

	temp = 0;
 80004e2:	2300      	movs	r3, #0
 80004e4:	60fb      	str	r3, [r7, #12]
	//4. OP type
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004e6:	687b      	ldr	r3, [r7, #4]
 80004e8:	7a1b      	ldrb	r3, [r3, #8]
 80004ea:	461a      	mov	r2, r3
 80004ec:	687b      	ldr	r3, [r7, #4]
 80004ee:	791b      	ldrb	r3, [r3, #4]
 80004f0:	fa02 f303 	lsl.w	r3, r2, r3
 80004f4:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->OTYPER &= ~(0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004f6:	687b      	ldr	r3, [r7, #4]
 80004f8:	681b      	ldr	r3, [r3, #0]
 80004fa:	685a      	ldr	r2, [r3, #4]
 80004fc:	687b      	ldr	r3, [r7, #4]
 80004fe:	791b      	ldrb	r3, [r3, #4]
 8000500:	4619      	mov	r1, r3
 8000502:	2301      	movs	r3, #1
 8000504:	408b      	lsls	r3, r1
 8000506:	43db      	mvns	r3, r3
 8000508:	4619      	mov	r1, r3
 800050a:	687b      	ldr	r3, [r7, #4]
 800050c:	681b      	ldr	r3, [r3, #0]
 800050e:	400a      	ands	r2, r1
 8000510:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 8000512:	687b      	ldr	r3, [r7, #4]
 8000514:	681b      	ldr	r3, [r3, #0]
 8000516:	6859      	ldr	r1, [r3, #4]
 8000518:	687b      	ldr	r3, [r7, #4]
 800051a:	681b      	ldr	r3, [r3, #0]
 800051c:	68fa      	ldr	r2, [r7, #12]
 800051e:	430a      	orrs	r2, r1
 8000520:	605a      	str	r2, [r3, #4]

	temp = 0;
 8000522:	2300      	movs	r3, #0
 8000524:	60fb      	str	r3, [r7, #12]
	//5. Alt Functionality config
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN){
 8000526:	687b      	ldr	r3, [r7, #4]
 8000528:	795b      	ldrb	r3, [r3, #5]
 800052a:	2b02      	cmp	r3, #2
 800052c:	d11d      	bne.n	800056a <GPIO_Init+0x15e>
		//Alt function configuration
		uint8_t temp1, temp2;

		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 800052e:	687b      	ldr	r3, [r7, #4]
 8000530:	791b      	ldrb	r3, [r3, #4]
 8000532:	08db      	lsrs	r3, r3, #3
 8000534:	72fb      	strb	r3, [r7, #11]
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8;
 8000536:	687b      	ldr	r3, [r7, #4]
 8000538:	791b      	ldrb	r3, [r3, #4]
 800053a:	f003 0307 	and.w	r3, r3, #7
 800053e:	72bb      	strb	r3, [r7, #10]

		pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4 * temp2));
 8000540:	687b      	ldr	r3, [r7, #4]
 8000542:	681b      	ldr	r3, [r3, #0]
 8000544:	7afa      	ldrb	r2, [r7, #11]
 8000546:	3208      	adds	r2, #8
 8000548:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800054c:	687b      	ldr	r3, [r7, #4]
 800054e:	7a5b      	ldrb	r3, [r3, #9]
 8000550:	461a      	mov	r2, r3
 8000552:	7abb      	ldrb	r3, [r7, #10]
 8000554:	009b      	lsls	r3, r3, #2
 8000556:	fa02 f303 	lsl.w	r3, r2, r3
 800055a:	4618      	mov	r0, r3
 800055c:	687b      	ldr	r3, [r7, #4]
 800055e:	681b      	ldr	r3, [r3, #0]
 8000560:	7afa      	ldrb	r2, [r7, #11]
 8000562:	4301      	orrs	r1, r0
 8000564:	3208      	adds	r2, #8
 8000566:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}

}
 800056a:	bf00      	nop
 800056c:	3714      	adds	r7, #20
 800056e:	46bd      	mov	sp, r7
 8000570:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000574:	4770      	bx	lr

08000576 <GPIO_ReadFromInputPin>:
}

/*
 * Data read and write setup
 */
uint8_t GPIO_ReadFromInputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber){
 8000576:	b480      	push	{r7}
 8000578:	b085      	sub	sp, #20
 800057a:	af00      	add	r7, sp, #0
 800057c:	6078      	str	r0, [r7, #4]
 800057e:	460b      	mov	r3, r1
 8000580:	70fb      	strb	r3, [r7, #3]
	uint8_t value;

	value = (uint8_t)((pGPIOx->IDR >> PinNumber) & 0x00000001);
 8000582:	687b      	ldr	r3, [r7, #4]
 8000584:	691a      	ldr	r2, [r3, #16]
 8000586:	78fb      	ldrb	r3, [r7, #3]
 8000588:	fa22 f303 	lsr.w	r3, r2, r3
 800058c:	b2db      	uxtb	r3, r3
 800058e:	f003 0301 	and.w	r3, r3, #1
 8000592:	73fb      	strb	r3, [r7, #15]

	return value;
 8000594:	7bfb      	ldrb	r3, [r7, #15]
}
 8000596:	4618      	mov	r0, r3
 8000598:	3714      	adds	r7, #20
 800059a:	46bd      	mov	sp, r7
 800059c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005a0:	4770      	bx	lr

080005a2 <GPIO_TogglePin>:

}
void GPIO_WriteToOutputPort(GPIO_RegDef_t *pGPIOx, uint16_t Value){
	pGPIOx->ODR = Value;
}
void GPIO_TogglePin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber){
 80005a2:	b480      	push	{r7}
 80005a4:	b083      	sub	sp, #12
 80005a6:	af00      	add	r7, sp, #0
 80005a8:	6078      	str	r0, [r7, #4]
 80005aa:	460b      	mov	r3, r1
 80005ac:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR ^= (1 << PinNumber);
 80005ae:	687b      	ldr	r3, [r7, #4]
 80005b0:	695b      	ldr	r3, [r3, #20]
 80005b2:	78fa      	ldrb	r2, [r7, #3]
 80005b4:	2101      	movs	r1, #1
 80005b6:	fa01 f202 	lsl.w	r2, r1, r2
 80005ba:	405a      	eors	r2, r3
 80005bc:	687b      	ldr	r3, [r7, #4]
 80005be:	615a      	str	r2, [r3, #20]
}
 80005c0:	bf00      	nop
 80005c2:	370c      	adds	r7, #12
 80005c4:	46bd      	mov	sp, r7
 80005c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005ca:	4770      	bx	lr

080005cc <__libc_init_array>:
 80005cc:	b570      	push	{r4, r5, r6, lr}
 80005ce:	4d0d      	ldr	r5, [pc, #52]	; (8000604 <__libc_init_array+0x38>)
 80005d0:	4c0d      	ldr	r4, [pc, #52]	; (8000608 <__libc_init_array+0x3c>)
 80005d2:	1b64      	subs	r4, r4, r5
 80005d4:	10a4      	asrs	r4, r4, #2
 80005d6:	2600      	movs	r6, #0
 80005d8:	42a6      	cmp	r6, r4
 80005da:	d109      	bne.n	80005f0 <__libc_init_array+0x24>
 80005dc:	4d0b      	ldr	r5, [pc, #44]	; (800060c <__libc_init_array+0x40>)
 80005de:	4c0c      	ldr	r4, [pc, #48]	; (8000610 <__libc_init_array+0x44>)
 80005e0:	f000 f818 	bl	8000614 <_init>
 80005e4:	1b64      	subs	r4, r4, r5
 80005e6:	10a4      	asrs	r4, r4, #2
 80005e8:	2600      	movs	r6, #0
 80005ea:	42a6      	cmp	r6, r4
 80005ec:	d105      	bne.n	80005fa <__libc_init_array+0x2e>
 80005ee:	bd70      	pop	{r4, r5, r6, pc}
 80005f0:	f855 3b04 	ldr.w	r3, [r5], #4
 80005f4:	4798      	blx	r3
 80005f6:	3601      	adds	r6, #1
 80005f8:	e7ee      	b.n	80005d8 <__libc_init_array+0xc>
 80005fa:	f855 3b04 	ldr.w	r3, [r5], #4
 80005fe:	4798      	blx	r3
 8000600:	3601      	adds	r6, #1
 8000602:	e7f2      	b.n	80005ea <__libc_init_array+0x1e>
 8000604:	0800062c 	.word	0x0800062c
 8000608:	0800062c 	.word	0x0800062c
 800060c:	0800062c 	.word	0x0800062c
 8000610:	08000630 	.word	0x08000630

08000614 <_init>:
 8000614:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000616:	bf00      	nop
 8000618:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800061a:	bc08      	pop	{r3}
 800061c:	469e      	mov	lr, r3
 800061e:	4770      	bx	lr

08000620 <_fini>:
 8000620:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000622:	bf00      	nop
 8000624:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000626:	bc08      	pop	{r3}
 8000628:	469e      	mov	lr, r3
 800062a:	4770      	bx	lr
